name: CI

on:
  pull_request:
  push:
    branches: 
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image for CI (including dev/test gems)
        run: |
          docker build \
            --build-arg BUNDLE_WITHOUT="" \
            -t myapp-image .

  scan_ruby:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Brakeman
        run: docker run --rm -v ${{ github.workspace }}:/rails -w /rails \
              -e RAILS_ENV=development \
              myapp-image bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run importmap audit
        run: docker run --rm -v ${{ github.workspace }}:/rails -w /rails \
              -e RAILS_ENV=development \
              myapp-image bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Rubocop
        run: docker run --rm -v ${{ github.workspace }}:/rails -w /rails \
              -e RAILS_ENV=development \
              myapp-image bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: docker run --rm -v ${{ github.workspace }}:/rails -w /rails \
              -e RAILS_ENV=test \
              myapp-image bash -c "
                bin/rails db:test:prepare &&
                bin/rails test test:system
              "

      - name: Upload screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: tmp/screenshots
          if-no-files-found: ignore
